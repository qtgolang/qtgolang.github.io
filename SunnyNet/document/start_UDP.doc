.版本 2
.支持库 spec

.子程序 __启动窗口_创建完毕
.局部变量 http回调函数, 整数型
.局部变量 WebSocket回调函数, 整数型
.局部变量 Tcp回调函数, 整数型
.局部变量 UDP回调函数, 整数型
.局部变量 错误信息, 文本型

' Sunny中间件  在模块中已是全局变量，直接使用即可
Sunny中间件.绑定端口 (2023)

http回调函数 ＝ 0
WebSocket回调函数 ＝ 0
Tcp回调函数 ＝ 0
UDP回调函数 ＝ 到整数 (&__示例__UDP回调函数)

Sunny中间件.绑定回调地址 (http回调函数, Tcp回调函数, WebSocket回调函数, UDP回调函数)


.如果 (Sunny中间件.启动 ())
    调试输出 (“启动成功”)

    ' 手机端设置Socket5代理，电脑端使用驱动，才能捕获UDP
    ' 手机端设置Socket5代理，电脑端使用驱动，才能捕获UDP

    .如果真 (Sunny中间件.驱动_加载 (真) ＝ 假)
        调试输出 (“加载驱动失败了，所有可能无法捕获到UDP”)
        信息框 (“加载驱动失败，请尝试管理员运行！！”, #错误图标, , )
        结束 ()
    .如果真结束



.否则
    信息框 (Sunny中间件.取错误 (), #错误图标, “启动失败”, )
.如果结束


.子程序 __示例__UDP回调函数, , 公开, 手机端设置Socket5代理，电脑端使用驱动，才能捕获UDP
.参数 SunnyContext, 整数型, , Sunny中间件可创建多个 由这个参数判断是哪个Sunny回调过来的
.参数 来源地址, 文本型, ,  
.参数 远程地址, 文本型, ,  
.参数 事件类型, 整数型, , #Sunny_UDP_消息类型_
.参数 MessageId, 整数型
.参数 唯一ID, 整数型, , 会话唯一ID,同一会话不变
.参数 pid, 整数型, , 进程PID 若等于0 表示通过代理远程请求 无进程PID
.局部变量 Body, 字节集

.判断开始 (事件类型 ＝ #Sunny_UDP_消息类型_发送)
    ' 获取发送数据
    Body ＝ Sunny函数.Udp_取Body (MessageId)
    ' 修改数据
    ' Sunny函数.Udp_修改Body (MessageId, Body)

    ' 其他命令
    ' Sunny函数.UDP_向服务器发送消息 ()
    ' Sunny函数.UDP_向客户端发送消息 ()

.判断 (事件类型 ＝ #Sunny_UDP_消息类型_接收)
    ' 获取接收数据
    Body ＝ Sunny函数.Udp_取Body (MessageId)
    ' 修改数据
    ' Sunny函数.Udp_修改Body (MessageId, Body)

    ' 其他命令
    ' Sunny函数.UDP_向服务器发送消息 ()
    ' Sunny函数.UDP_向客户端发送消息 ()

.判断 (事件类型 ＝ #Sunny_UDP_消息类型_关闭)
    ' UDP会话已关闭
.默认

.判断结束
返回 ()

