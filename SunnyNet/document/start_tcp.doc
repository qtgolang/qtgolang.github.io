.版本 2

.子程序 __启动窗口_创建完毕
.局部变量 http回调函数, 整数型
.局部变量 WebSocket回调函数, 整数型
.局部变量 Tcp回调函数, 整数型
.局部变量 错误信息, 文本型

' Sunny中间件  在模块中已是全局变量，直接使用即可
Sunny中间件.绑定端口 (2022)

http回调函数 ＝ 0
WebSocket回调函数 ＝ 0
Tcp回调函数 ＝ 到整数 (&__示例__TCP回调函数)

Sunny中间件.绑定回调地址 (http回调函数, Tcp回调函数, WebSocket回调函数)

' 请注意，本示例是抓包TCP，所以客户端必须设置S5代理。否则无效
' 请注意，本示例是抓包TCP，所以客户端必须设置S5代理。否则无效
' 请注意，本示例是抓包TCP，所以客户端必须设置S5代理。否则无效

' Sunny中间件.设置IE代理 ()  ' 设置IE代理
' Sunny中间件.关闭IE代理 ()'取消IE代理

.如果 (Sunny中间件.启动 ())
    调试输出 (“启动成功”)
.否则
    信息框 (Sunny中间件.取错误 (), #错误图标, “启动失败”, )
.如果结束


.子程序 __示例__TCP回调函数, , 公开
.参数 SunnyContext, 整数型, , Sunny中间件可创建多个 由这个参数判断是哪个Sunny回调过来的
.参数 来源地址, 文本型
.参数 远程地址, 文本型
.参数 消息类型, 整数型, , 0=连接进入 1=发送数据 2=收到数据 3=断开连接 4=即将连接
.参数 MessageId, 整数型, , 会话唯一ID
.参数 数据指针, 整数型, , 字节集指针                 会话类型  0、3 时 无效
.参数 数据长度, 整数型, , 数据指针 的字节集长度      会话类型  0、3 时 无效
.参数 唯一ID, 整数型
.参数 pid, 整数型, , 进程PID 若等于0 表示通过代理远程请求 无进程PID
.局部变量 数据, 字节集

' 其他相关命令
' Sunny函数.Tcp_断开指定连接 (唯一ID)  ' 可在任意位置调用，需知道唯一ID
' Sunny函数.Tcp_发送消息 (发送方向,唯一ID)  ' 可在任意位置调用，需知道唯一ID 

.判断开始 (消息类型 ＝ #Sunny_TCP_消息类型_即将连接)  ' 即将连接 2022-01-21新增

    .如果真 (远程地址 ＝ “8.8.8.8:8088”)
        Sunny函数.Tcp_连接重定向 (MessageId, “127.0.0.1:19730”)
    .如果真结束

    ' Sunny函数.Tcp_设置代理 (MessageId, “socket5://admin:123456@127.0.0.1:8888”)  ' 仅可 即将连接 时调用,仅支持S5代理

.判断 (消息类型 ＝ 0)  ' 连接进入

    调试输出 (“” ＋ 来源地址 ＋ “  到  ” ＋ 远程地址 ＋ “  连接了”)

.判断 (消息类型 ＝ #Sunny_TCP_消息类型_发送数据 或 消息类型 ＝ #Sunny_TCP_消息类型_收到数据)  ' 1=发送数据 2=收到数据

    数据 ＝ 指针到字节集 (数据指针, 数据长度)

    ' 匹配条件进行替换修改
    .判断开始 (寻找字节集 (数据, 到字节集 (“哈喽”), ) ≠ -1)
        ' 匹配到 进行拦截修改 发送或接收的数据

        ' 进行修改数据
        数据 ＝ 子字节集替换 (数据, 到字节集 (“哈喽”), 到字节集 (“你好”), , )

        ' 将修改好的数据设置进去
        Sunny函数.Tcp_修改消息 (MessageId, 消息类型, 数据)

        .判断开始 (消息类型 ＝ 1)
            调试输出 (“已拦截到 发送数据 并且已修改了其中的数据”)
        .判断 (消息类型 ＝ 2)
            调试输出 (“已拦截到 接收数据 并且已修改了其中的数据”)
        .默认
            ' 未知错误
        .判断结束

    .默认
        调试输出 (“” ＋ 来源地址 ＋ “  到  ” ＋ 远程地址 ＋ “  ” ＋ 选择 (消息类型 ＝ 1, “发送了”, “接收了”) ＋ “     数据：” ＋ 到文本 (数据长度))
    .判断结束

.判断 (消息类型 ＝ #Sunny_TCP_消息类型_断开连接)  ' 未知-错误
    调试输出 (“” ＋ 来源地址 ＋ “  到  ” ＋ 远程地址 ＋ “  断开了”)
.判断 (消息类型 ＝ #Sunny_TCP_消息类型_连接成功)  ' 连接成功

.默认

.判断结束