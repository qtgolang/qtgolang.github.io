.版本 2
.支持库 spec

.子程序 __启动窗口_创建完毕
.局部变量 http回调函数, 整数型
.局部变量 WebSocket回调函数, 整数型
.局部变量 Tcp回调函数, 整数型
.局部变量 错误信息, 文本型

' Sunny中间件  在模块中已是全局变量，直接使用即可
Sunny中间件.绑定端口 (2022)

http回调函数 ＝ 0
WebSocket回调函数 ＝ 到整数 (&__示例__WebSocket回调函数)
Tcp回调函数 ＝ 0

Sunny中间件.绑定回调地址 (http回调函数, Tcp回调函数, WebSocket回调函数)
' Sunny中间件.设置IE代理 ()  ' 设置IE代理
' Sunny中间件.关闭IE代理 ()'取消IE代理

.如果 (Sunny中间件.启动 ())
    .如果真 (Sunny中间件.安装证书 (错误信息) ＝ 假)
        信息框 (“自动安装证书到系统失败,请手动安装证书！” ＋ #换行符 ＋ #换行符 ＋ 错误信息, 0, “证书安装失败”, )
    .如果真结束
    ' 安装证书请阅读：http://esunny.vip/ 中的 [Sunny网络中间件-示例文档]->[(教程)安装证书]
    信息框 (“启动成功”, 0, , )

.否则
    信息框 (Sunny中间件.取错误 (), #错误图标, “启动失败”, )
.如果结束


.子程序 __示例__WebSocket回调函数, , 公开
.参数 SunnyContext, 整数型, , Sunny中间件可创建多个 由这个参数判断是哪个Sunny回调过来的
.参数 请求唯一ID, 整数型
.参数 MessageId, 整数型
.参数 消息类型, 整数型, , #Sunny_消息类型_
.参数 Method, 文本型
.参数 Url, 文本型
.参数 pid, 整数型, , 进程PID 若等于0 表示通过代理远程请求 无进程PID
.参数 WsMsgType, 整数型, , ws/wss 发送或接收的消息类型 请使用[ #Sunny_WsMessage_]

' ws 测试地址  http:// coolaf.com/tool/chattest
' wss 测试地址  https:// www .idcd.com/tool/socket
' ===========================================
' 相关命令
' Sunny函数.ws_发送数据 (发送方向,请求唯一ID, WsMsgType, 到字节集 (“123456”)) ' 主动发送消息 可在任意位置调用
' Sunny函数.ws_断开指定连接 (请求唯一ID) ' 主动发送消息 可在任意位置调用

.判断开始 (消息类型 ＝ #Sunny_Websocket_消息类型_连接成功)

    调试输出 (“Websocket 建立连接”, Url)

.判断 (消息类型 ＝ #Sunny_Websocket_消息类型_发送数据)

    调试输出 (“Websocket 发送数据”, Url)
    ' 相关命令
    ' Sunny函数.ws_取Body长度 (MessageId) ' 取要发送数据的长度
    ' Sunny函数.ws_取Body (MessageId)  ' 取出要发送的数据
    ' Sunny函数.ws_修改Body (MessageId, {  }) '将要发送的数据修改为 空

.判断 (消息类型 ＝ #Sunny_Websocket_消息类型_收到数据)

    调试输出 (“Websocket 收到数据”, Url)
    ' 相关命令
    ' Sunny函数.ws_取Body长度 (MessageId) ' 取要发送数据的长度
    ' Sunny函数.ws_取Body (MessageId)  ' 取出要发送的数据
    ' Sunny函数.ws_修改Body (MessageId, {  }) '将要发送的数据修改为 空

.判断 (消息类型 ＝ #Sunny_Websocket_消息类型_断开连接)

    调试输出 (“Websocket 断开连接”, Url)
.默认

.判断结束
返回 ()