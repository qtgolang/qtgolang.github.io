.版本 2
.支持库 spec

.子程序 __启动窗口_创建完毕
.局部变量 连接成功, 逻辑型
.局部变量 连接地址, 文本型
.局部变量 Heads, 文本型

' wss客户端 是全局的【SunnyWSS客户端】类型，变量

连接地址 ＝ “wss://xxxxxxxxxxxxxxxxxxxxxxxxxx”
Heads ＝ “User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64)” ＋ #换行符
Heads ＝ Heads ＋ “Upgrade: websocket” ＋ #换行符
Heads ＝ Heads ＋ “” ＋ #换行符

' 连接地址 可以是 ws 和 wss
连接成功 ＝ wss客户端.连接 (连接地址, Heads, 到整数 (&___回调函数参考), 假, , , , )

调试输出 (连接成功)

.子程序 ___回调函数参考, , 公开
.参数 _Context, 整数型
.参数 消息类型, 整数型, , 1=接收消息 2=接收时连接被断开 3=发送时连接被断开
.参数 数据指针, 整数型, , 消息类型=2、3时 这里是错误信息
.参数 指针长度, 整数型
.参数 数据类型, 整数型, , #WS客户端_ (当消息类型=1时有效)
.局部变量 收到的消息, 字节集

.如果真 (消息类型 ≠ 1)
    调试输出 (“错误信息：”, 指针到文本 (数据指针))
    返回 ()
.如果真结束
' 如果有多个客户端
' 取客户端标识来区分对象
.如果真 (wss客户端.取客户端标识 () ＝ _Context)

    收到的消息 ＝ 指针到字节集 (数据指针, 指针长度)
    调试输出 (“收到的消息”, 收到的消息)
    ' 回复消息
    ' 注意调整发送数据的第二个参数,一般和收到的 数据类型 一致
    ' wss客户端.发送数据 (到字节集 (“66666666666666”), 数据类型)
    ' wss客户端.发送数据 (到字节集 (“66666666666666”), #WS客户端_BinaryMessage)
.如果真结束